name: Release Rulesfile

on:
  push:
    tags:
      - "*"

jobs:

  Release-Rulesfile:

    runs-on: ubuntu-latest

    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:

      id-token: write
      contents: read
      packages: write

    env:

      # Only one ruleset for our demo
      RULESET_FILE: custom_falco_rules.yaml

      # Used to setup Auth and OCI artifact location
      OCI_REGISTRY: ghcr.io

      # OCI artifact will look like ghcr.io/user/custom-rules:main
      OCI_ARTIFACT_NAME: custom-rules
      OCI_ARTIFACT_VERSION: ${{ github.ref_name }}

    steps:
      - name: Download Falcoctl
        uses: giantswarm/install-binary-action@v1.1.0
        with:
          binary: "falcoctl"
          version: "0.5.1"
          download_url: "https://github.com/falcosecurity/falcoctl/releases/download/v${version}/falcoctl_${version}_linux_amd64.tar.gz"
          tarball_binary_path: "${binary}"
          smoke_test: "${binary} version"

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: '^1.20'
          cache-dependency-path: tools/falcoctl/go.sum

      - name: Checkout Rules Repo
        uses: actions/checkout@v3
        with:
          path: rules

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.0.1'

      - name: Get lowercase OCI repo prefix
        run: |
          echo "OCI_REPO_PREFIX=${OCI_REGISTRY}/${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

      - name: Log into ghcr.io
        uses: docker/login-action@master
        with:
          registry: ghcr.io
          username: lucaguerra
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload OCI artifacts to GitHub packages
        run: |
             tools/falcoctl/falcoctl registry push \
             --config /dev/null \
             --type rulesfile \
             --version ${OCI_ARTIFACT_VERSION} \
             --annotation-source ${{ github.server_url }}/${{ github.repository }}.git \
             ${OCI_REPO_PREFIX}/${OCI_ARTIFACT_NAME}:${OCI_ARTIFACT_VERSION} \
             rules/${RULESET_FILE} | tee falcoctl_output.txt && \
             echo "ARTIFACT_DIGEST=$(grep --only-matching -e "sha256:[a-fA-F0-9]\{64\}" falcoctl_output.txt)" >> ${GITHUB_ENV}

      - name: Cosign magic
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: cosign sign --yes ${OCI_REPO_PREFIX}/${OCI_ARTIFACT_NAME}@${ARTIFACT_DIGEST}
